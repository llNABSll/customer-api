{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "0b7336cfbed64197bc56591bc4a50f50"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "0b7336cfbed64197bc56591bc4a50f50"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "0b7336cfbed64197bc56591bc4a50f50"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3e1c8a8d714d41dfbf184330e1e90f8e"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3e1c8a8d714d41dfbf184330e1e90f8e"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3e1c8a8d714d41dfbf184330e1e90f8e"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "1ace3f2a525f4049bb0e47ae919cec1f", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (name, email, company, phone, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane Doe', 'jane.doe@test.com', None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "de8929409f6e451a89f50b333aa6ca2c"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "de8929409f6e451a89f50b333aa6ca2c"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "de8929409f6e451a89f50b333aa6ca2c"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "e7128cb55e2a46cb9e6cd760665f8318"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "e7128cb55e2a46cb9e6cd760665f8318"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "e7128cb55e2a46cb9e6cd760665f8318"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "e93d8709ff574c2f852f41a977b42720"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "e93d8709ff574c2f852f41a977b42720"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "e93d8709ff574c2f852f41a977b42720"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "39a1780ee6194a9bac17087681e12d79"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "39a1780ee6194a9bac17087681e12d79"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "39a1780ee6194a9bac17087681e12d79"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "d1f76edcdc4b4bbf90bdb972b5beb824"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "d1f76edcdc4b4bbf90bdb972b5beb824"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "d1f76edcdc4b4bbf90bdb972b5beb824"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9882f7329f2a4f0d9bba8862369f9d39"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "8c6ca3084e7b4bfaab1b05d17fffd99b"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "039043438e4544638f97518eb7e0030f"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:30+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "ERROR", "logger": "customer-api", "msg": "RabbitMQ startup failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 56, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "d14bd8176d294757a392a6d26082d5eb"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "d1e315b0fb8e4f3cac505c860e9e9320"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "8de9eed7cac641d6a4df26c4cb46a7ad"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (name, email, company, phone, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'dup@test.com', None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-10T22:24:31+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 69, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 69, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:24:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "e87019179bfc48618624489d55a7dd5f"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "e87019179bfc48618624489d55a7dd5f"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "e87019179bfc48618624489d55a7dd5f"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "651536d7476c4d12ba1379e77b9ffc3c"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "651536d7476c4d12ba1379e77b9ffc3c"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "651536d7476c4d12ba1379e77b9ffc3c"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "d872d98137e8496e8ed635d37c0a12a2", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (name, email, company, phone, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane Doe', 'jane.doe@test.com', None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "16944ef8686a49a2b933041fb04e2376"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "16944ef8686a49a2b933041fb04e2376"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "16944ef8686a49a2b933041fb04e2376"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "bec0f80970244194a64d4efaedfd609a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "bec0f80970244194a64d4efaedfd609a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "bec0f80970244194a64d4efaedfd609a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "7b0da263c06746a1b5aafc4ecec83b4a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "7b0da263c06746a1b5aafc4ecec83b4a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "7b0da263c06746a1b5aafc4ecec83b4a"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "f2cceeef563b4cde953a7bd92c733af4"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "f2cceeef563b4cde953a7bd92c733af4"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "f2cceeef563b4cde953a7bd92c733af4"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "ad2bf24873bd4537afde5127b63d97f0"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "ad2bf24873bd4537afde5127b63d97f0"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "ad2bf24873bd4537afde5127b63d97f0"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "0d14941990ac42669ea01d2d53bc4959"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "5d4b8f41ede74e77b0496b921a952015"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "534efdd3aaee497e8dc6720e11d6672f"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:32+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "customer-api", "msg": "RabbitMQ startup failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 56, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (name, email, company, phone, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'dup@test.com', None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-10T22:29:33+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 19, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 69, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 69, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-10T22:29:33+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
