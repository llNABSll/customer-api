{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern product.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-12T20:27:05+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "INFO", "logger": "aio_pika.robust_connection", "msg": "Connection to amqp://app:******@rabbitmq:5672/%2F closed. Reconnecting after 5 seconds.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:07+0000", "level": "ERROR", "logger": "customer-api", "msg": "RabbitMQ startup failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 457, in connect\n    reader, writer = await asyncio.open_connection(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/asyncio/streams.py\", line 48, in open_connection\n    transport, _ = await loop.create_connection(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"uvloop/loop.pyx\", line 2043, in create_connection\n  File \"uvloop/loop.pyx\", line 2020, in uvloop.loop.Loop.create_connection\nConnectionRefusedError: [Errno 111] Connection refused\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/main.py\", line 51, in lifespan\n    await rabbitmq.connect()\n  File \"/app/app/infra/events/rabbitmq.py\", line 40, in connect\n    self.connection = await aio_pika.connect_robust(self.url)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 340, in connect_robust\n    await connection.connect(timeout=timeout)\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 186, in connect\n    await self.__fail_fast_future\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 141, in __connection_factory\n    await Connection.connect(self, self.__connect_timeout)\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/connection.py\", line 118, in connect\n    self.transport = await UnderlayConnection.connect(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/abc.py\", line 671, in connect\n    connection = await cls.make_connection(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/abc.py\", line 659, in make_connection\n    connection: aiormq.abc.AbstractConnection = await asyncio.wait_for(\n                                                ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/asyncio/tasks.py\", line 452, in wait_for\n    return await fut\n           ^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 920, in connect\n    await connection.connect(client_properties or {})\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/base.py\", line 164, in wrap\n    return await self.create_task(func(self, *args, **kwargs))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/abc.py\", line 44, in __inner\n    return await self.task\n           ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 464, in connect\n    raise AMQPConnectionError(*e.args) from e\naiormq.exceptions.AMQPConnectionError: [Errno 111] Connection refused"}
{"ts": "2025-09-13T14:32:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T14:32:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:42:49+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Shutting down", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:42:49+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application shutdown.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:42:49+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application shutdown complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:42:49+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Finished server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern product.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T19:48:59+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Shutting down", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application shutdown.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application shutdown complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Finished server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:37:35+0000", "level": "INFO", "logger": "aio_pika.queue", "msg": "<RobustQueueIterator: queue='q-customer' ctag='ctag2.6c42c6f5c5b84a39acc56a877c415a99'> closing with timeout 5 seconds", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] Consumer lancé (q-customer, patterns=order.#)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:40:33+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:42:40+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ec8b7aa682664803a9f8d35cbca3f0ec"}
{"ts": "2025-09-13T20:42:40+0000", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "ec8b7aa682664803a9f8d35cbca3f0ec", "exc_info": "Traceback (most recent call last):\n  File \"/app/app/core/database.py\", line 54, in get_db\n    yield db\nAttributeError: 'Client' object has no attribute 'name'"}
{"ts": "2025-09-13T20:42:40+0000", "level": "ERROR", "logger": "uvicorn.error", "msg": "Exception in ASGI application\n", "service": "customer-api", "request_id": "-", "exc_info": "  + Exception Group Traceback (most recent call last):\n  |   File \"/usr/local/lib/python3.11/site-packages/starlette/_utils.py\", line 77, in collapse_excgroups\n  |     yield\n  |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 186, in __call__\n  |     async with anyio.create_task_group() as task_group:\n  |   File \"/usr/local/lib/python3.11/site-packages/anyio/_backends/_asyncio.py\", line 772, in __aexit__\n  |     raise BaseExceptionGroup(\n  | ExceptionGroup: unhandled errors in a TaskGroup (1 sub-exception)\n  +-+---------------- 1 ----------------\n    | Traceback (most recent call last):\n    |   File \"/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 399, in run_asgi\n    |     result = await app(  # type: ignore[func-returns-value]\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py\", line 70, in __call__\n    |     return await self.app(scope, receive, send)\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/fastapi/applications.py\", line 1054, in __call__\n    |     await super().__call__(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/applications.py\", line 113, in __call__\n    |     await self.middleware_stack(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    |     raise exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    |     await self.app(scope, receive, _send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 85, in __call__\n    |     await self.app(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 185, in __call__\n    |     with collapse_excgroups():\n    |   File \"/usr/local/lib/python3.11/contextlib.py\", line 158, in __exit__\n    |     self.gen.throw(typ, value, traceback)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_utils.py\", line 83, in collapse_excgroups\n    |     raise exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 187, in __call__\n    |     response = await self.dispatch_func(request, call_next)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/app/app/main.py\", line 124, in metrics_middleware\n    |     response: Response = await call_next(request)\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    |     raise app_exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    |     await self.app(scope, receive_or_disconnect, send_no_error)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 185, in __call__\n    |     with collapse_excgroups():\n    |   File \"/usr/local/lib/python3.11/contextlib.py\", line 158, in __exit__\n    |     self.gen.throw(typ, value, traceback)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_utils.py\", line 83, in collapse_excgroups\n    |     raise exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 187, in __call__\n    |     response = await self.dispatch_func(request, call_next)\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/app/app/core/logging.py\", line 170, in access_log_middleware\n    |     response: Response = await call_next(request)\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    |     raise app_exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    |     await self.app(scope, receive_or_disconnect, send_no_error)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    |     await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 62, in wrapped_app\n    |     raise exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 51, in wrapped_app\n    |     await app(scope, receive, sender)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 715, in __call__\n    |     await self.middleware_stack(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 735, in app\n    |     await route.handle(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 288, in handle\n    |     await self.app(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 76, in app\n    |     await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 62, in wrapped_app\n    |     raise exc\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 51, in wrapped_app\n    |     await app(scope, receive, sender)\n    |   File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 73, in app\n    |     response = await f(request)\n    |                ^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/fastapi/routing.py\", line 301, in app\n    |     raw_response = await run_endpoint_function(\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/usr/local/lib/python3.11/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    |     return await dependant.call(**values)\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/app/app/api/routes.py\", line 46, in create_customer\n    |     created = await svc.create(customer)\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |   File \"/app/app/services/client_service.py\", line 89, in create\n    |     {\"id\": customer.id, \"name\": customer.name, \"email\": customer.email},\n    |                                 ^^^^^^^^^^^^^\n    | AttributeError: 'Client' object has no attribute 'name'\n    +------------------------------------\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 399, in run_asgi\n    result = await app(  # type: ignore[func-returns-value]\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/uvicorn/middleware/proxy_headers.py\", line 70, in __call__\n    return await self.app(scope, receive, send)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/fastapi/applications.py\", line 1054, in __call__\n    await super().__call__(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/applications.py\", line 113, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 187, in __call__\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/errors.py\", line 165, in __call__\n    await self.app(scope, receive, _send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/cors.py\", line 85, in __call__\n    await self.app(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 185, in __call__\n    with collapse_excgroups():\n  File \"/usr/local/lib/python3.11/contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_utils.py\", line 83, in collapse_excgroups\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 187, in __call__\n    response = await self.dispatch_func(request, call_next)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/main.py\", line 124, in metrics_middleware\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    raise app_exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 185, in __call__\n    with collapse_excgroups():\n  File \"/usr/local/lib/python3.11/contextlib.py\", line 158, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_utils.py\", line 83, in collapse_excgroups\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 187, in __call__\n    response = await self.dispatch_func(request, call_next)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/core/logging.py\", line 170, in access_log_middleware\n    response: Response = await call_next(request)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 163, in call_next\n    raise app_exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/base.py\", line 149, in coro\n    await self.app(scope, receive_or_disconnect, send_no_error)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/middleware/exceptions.py\", line 62, in __call__\n    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 62, in wrapped_app\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 51, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 715, in __call__\n    await self.middleware_stack(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 735, in app\n    await route.handle(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 288, in handle\n    await self.app(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 76, in app\n    await wrap_app_handling_exceptions(app, request)(scope, receive, send)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 62, in wrapped_app\n    raise exc\n  File \"/usr/local/lib/python3.11/site-packages/starlette/_exception_handler.py\", line 51, in wrapped_app\n    await app(scope, receive, sender)\n  File \"/usr/local/lib/python3.11/site-packages/starlette/routing.py\", line 73, in app\n    response = await f(request)\n               ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/fastapi/routing.py\", line 301, in app\n    raw_response = await run_endpoint_function(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/fastapi/routing.py\", line 212, in run_endpoint_function\n    return await dependant.call(**values)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/api/routes.py\", line 46, in create_customer\n    created = await svc.create(customer)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/services/client_service.py\", line 89, in create\n    {\"id\": customer.id, \"name\": customer.name, \"email\": customer.email},\n                                ^^^^^^^^^^^^^\nAttributeError: 'Client' object has no attribute 'name'"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Shutting down", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application shutdown.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application shutdown complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Finished server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:50+0000", "level": "INFO", "logger": "aio_pika.queue", "msg": "<RobustQueueIterator: queue='q-customer' ctag='ctag2.331e70ad1d094e27a9270d4aab931ef5'> closing with timeout 5 seconds", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] Consumer lancé (q-customer, patterns=order.#)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:48:54+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:02+0000", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "e0e6274b279d4fe2806e2080e64fb18e", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"clients_email_key\"\nDETAIL:  Key (email)=(alice.martin.ptk+1@example.com) already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/repositories/client.py\", line 23, in create_client\n    db.commit()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4487, in _flush\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint \"clients_email_key\"\nDETAIL:  Key (email)=(alice.martin.ptk+1@example.com) already exists.\n\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (%(first_name)s, %(last_name)s, %(email)s, %(company)s, %(phone)s, %(address_line1)s, %(address_line2)s, %(postal_code)s, %(city)s, %(state)s, %(country_code)s, %(last_order_date)s, %(version)s) RETURNING clients.id, clients.created_at, clients.updated_at, clients.orders_count]\n[parameters: {'first_name': 'Alice', 'last_name': 'Martin', 'email': 'alice.martin.ptk+1@example.com', 'company': 'Café Paris', 'phone': '+33155550101', 'address_line1': '10 Rue de la Paix', 'address_line2': 'Bât A', 'postal_code': '75002', 'city': 'Paris', 'state': 'Île-de-France', 'country_code': 'FR', 'last_order_date': None, 'version': 1}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-13T20:49:02+0000", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "e0e6274b279d4fe2806e2080e64fb18e", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\npsycopg2.errors.UniqueViolation: duplicate key value violates unique constraint \"clients_email_key\"\nDETAIL:  Key (email)=(alice.martin.ptk+1@example.com) already exists.\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/services/client_service.py\", line 87, in create\n    customer = repo.create_client(self.db, data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/repositories/client.py\", line 23, in create_client\n    db.commit()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4487, in _flush\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/orm/persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint \"clients_email_key\"\nDETAIL:  Key (email)=(alice.martin.ptk+1@example.com) already exists.\n\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (%(first_name)s, %(last_name)s, %(email)s, %(company)s, %(phone)s, %(address_line1)s, %(address_line2)s, %(postal_code)s, %(city)s, %(state)s, %(country_code)s, %(last_order_date)s, %(version)s) RETURNING clients.id, clients.created_at, clients.updated_at, clients.orders_count]\n[parameters: {'first_name': 'Alice', 'last_name': 'Martin', 'email': 'alice.martin.ptk+1@example.com', 'company': 'Café Paris', 'phone': '+33155550101', 'address_line1': '10 Rue de la Paix', 'address_line2': 'Bât A', 'postal_code': '75002', 'city': 'Paris', 'state': 'Île-de-France', 'country_code': 'FR', 'last_order_date': None, 'version': 1}]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/app/app/api/routes.py\", line 46, in create_customer\n    created = await svc.create(customer)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/app/services/client_service.py\", line 90, in create\n    raise EmailAlreadyExistsError(\"Email already exists\")\napp.services.client_service.EmailAlreadyExistsError: Email already exists\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/app/app/core/database.py\", line 54, in get_db\n    yield db\nfastapi.exceptions.HTTPException: 409: Email already exists"}
{"ts": "2025-09-13T20:49:55+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "bb0d498a5e0f4092b005e3a9a8577c32"}
{"ts": "2025-09-13T20:49:55+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.deleted, payload={'id': 1}", "service": "customer-api", "request_id": "bb0d498a5e0f4092b005e3a9a8577c32"}
{"ts": "2025-09-13T20:49:55+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "bb0d498a5e0f4092b005e3a9a8577c32"}
{"ts": "2025-09-13T20:49:55+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "bb0d498a5e0f4092b005e3a9a8577c32"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received order.deleted: {'id': 1, 'customer_id': 1, 'items': [{'product_id': 3, 'quantity': 40}, {'product_id': 4, 'quantity': 10}], 'deleted_at': '2025-09-13T20:49:56.087968+00:00'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=order.deleted", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/app/app/infra/events/rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"/app/app/main.py\", line 75, in consumer_handler\n    await handle_order_deleted(payload, db, rabbitmq)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: handle_order_deleted() takes 2 positional arguments but 3 were given"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received order.deleted: {'id': 2, 'customer_id': 1, 'items': [{'product_id': 3, 'quantity': 40}, {'product_id': 4, 'quantity': 10}], 'deleted_at': '2025-09-13T20:49:56.121697+00:00'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=order.deleted", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/app/app/infra/events/rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"/app/app/main.py\", line 75, in consumer_handler\n    await handle_order_deleted(payload, db, rabbitmq)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: handle_order_deleted() takes 2 positional arguments but 3 were given"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received order.deleted: {'id': 3, 'customer_id': 1, 'items': [{'product_id': 3, 'quantity': 40}, {'product_id': 4, 'quantity': 10}], 'deleted_at': '2025-09-13T20:49:56.140840+00:00'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=order.deleted", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/app/app/infra/events/rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"/app/app/main.py\", line 75, in consumer_handler\n    await handle_order_deleted(payload, db, rabbitmq)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: handle_order_deleted() takes 2 positional arguments but 3 were given"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 3, 'sku': 'KAW-BRA-1KG', 'name': 'Café Brésil 1kg'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 4, 'sku': 'KAW-COL-250', 'name': 'Café Colombie 250g'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 3, 'sku': 'KAW-BRA-1KG', 'name': 'Café Brésil 1kg'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 4, 'sku': 'KAW-COL-250', 'name': 'Café Colombie 250g'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 3, 'sku': 'KAW-BRA-1KG', 'name': 'Café Brésil 1kg'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] received product.updated: {'id': 4, 'sku': 'KAW-COL-250', 'name': 'Café Colombie 250g'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:49:56+0000", "level": "WARNING", "logger": "customer-api", "msg": "[customer-api] event ignoré: product.updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T20:50:06+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "9938303daf37473b8c8c0a24d13612be"}
{"ts": "2025-09-13T20:50:06+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 3, 'email': 'alice.martin@example.com', 'first_name': 'Alice', 'last_name': 'Martin'}", "service": "customer-api", "request_id": "9938303daf37473b8c8c0a24d13612be"}
{"ts": "2025-09-13T20:50:06+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "9938303daf37473b8c8c0a24d13612be"}
{"ts": "2025-09-13T20:50:06+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9938303daf37473b8c8c0a24d13612be"}
{"ts": "2025-09-13T20:50:17+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "2e9f4cd121ed421ab0233f8acd8277de"}
{"ts": "2025-09-13T20:50:17+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 4, 'email': 'bob.dupont@example.com', 'first_name': 'Bob', 'last_name': 'Dupont'}", "service": "customer-api", "request_id": "2e9f4cd121ed421ab0233f8acd8277de"}
{"ts": "2025-09-13T20:50:17+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "2e9f4cd121ed421ab0233f8acd8277de"}
{"ts": "2025-09-13T20:50:17+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "2e9f4cd121ed421ab0233f8acd8277de"}
{"ts": "2025-09-13T20:51:40+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "30daf429c565470090e4e7960c90c94d"}
{"ts": "2025-09-13T20:51:40+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 5, 'email': 'claire.leroy@example.com', 'first_name': 'Claire', 'last_name': 'Leroy'}", "service": "customer-api", "request_id": "30daf429c565470090e4e7960c90c94d"}
{"ts": "2025-09-13T20:51:40+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "30daf429c565470090e4e7960c90c94d"}
{"ts": "2025-09-13T20:51:40+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "30daf429c565470090e4e7960c90c94d"}
{"ts": "2025-09-13T20:51:53+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "1778427d8c20433690c8883040d09574"}
{"ts": "2025-09-13T20:51:53+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 6, 'email': 'david.moreau@example.com', 'first_name': 'David', 'last_name': 'Moreau'}", "service": "customer-api", "request_id": "1778427d8c20433690c8883040d09574"}
{"ts": "2025-09-13T20:51:53+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "1778427d8c20433690c8883040d09574"}
{"ts": "2025-09-13T20:51:53+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1778427d8c20433690c8883040d09574"}
{"ts": "2025-09-13T20:52:07+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "96fa4fe81b354ab8ab38dbffbd4152fb"}
{"ts": "2025-09-13T20:52:07+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 7, 'email': 'emma.roux@example.com', 'first_name': 'Emma', 'last_name': 'Roux'}", "service": "customer-api", "request_id": "96fa4fe81b354ab8ab38dbffbd4152fb"}
{"ts": "2025-09-13T20:52:07+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "96fa4fe81b354ab8ab38dbffbd4152fb"}
{"ts": "2025-09-13T20:52:07+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "96fa4fe81b354ab8ab38dbffbd4152fb"}
{"ts": "2025-09-13T20:52:17+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "99405bba1df240ea9c4a38d2df7b4939"}
{"ts": "2025-09-13T20:52:17+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 8, 'email': 'francois.garcia@example.com', 'first_name': 'François', 'last_name': 'Garcia'}", "service": "customer-api", "request_id": "99405bba1df240ea9c4a38d2df7b4939"}
{"ts": "2025-09-13T20:52:17+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "99405bba1df240ea9c4a38d2df7b4939"}
{"ts": "2025-09-13T20:52:17+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "99405bba1df240ea9c4a38d2df7b4939"}
{"ts": "2025-09-13T20:52:28+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c02a4981b4324cada1cf6f81c534b151"}
{"ts": "2025-09-13T20:52:28+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 9, 'email': 'hannah.petit@example.com', 'first_name': 'Hannah', 'last_name': 'Petit'}", "service": "customer-api", "request_id": "c02a4981b4324cada1cf6f81c534b151"}
{"ts": "2025-09-13T20:52:28+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c02a4981b4324cada1cf6f81c534b151"}
{"ts": "2025-09-13T20:52:28+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c02a4981b4324cada1cf6f81c534b151"}
{"ts": "2025-09-13T20:52:39+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "789d05d2cf54411a93becffd8b22f50b"}
{"ts": "2025-09-13T20:52:39+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 10, 'email': 'ibrahim.chevalier@example.com', 'first_name': 'Ibrahim', 'last_name': 'Chevalier'}", "service": "customer-api", "request_id": "789d05d2cf54411a93becffd8b22f50b"}
{"ts": "2025-09-13T20:52:39+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "789d05d2cf54411a93becffd8b22f50b"}
{"ts": "2025-09-13T20:52:39+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "789d05d2cf54411a93becffd8b22f50b"}
{"ts": "2025-09-13T20:52:51+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "021b03b4591640939f557726c873db55"}
{"ts": "2025-09-13T20:52:51+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 11, 'email': 'julie.mercier@example.com', 'first_name': 'Julie', 'last_name': 'Mercier'}", "service": "customer-api", "request_id": "021b03b4591640939f557726c873db55"}
{"ts": "2025-09-13T20:52:51+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "021b03b4591640939f557726c873db55"}
{"ts": "2025-09-13T20:52:51+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "021b03b4591640939f557726c873db55"}
{"ts": "2025-09-13T20:53:07+0000", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "310f6d76aa88437e8d11f62f5361b719"}
{"ts": "2025-09-13T20:53:07+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=customer.created, payload={'id': 12, 'email': 'kevin.bonnet@example.com', 'first_name': 'Kevin', 'last_name': 'Bonnet'}", "service": "customer-api", "request_id": "310f6d76aa88437e8d11f62f5361b719"}
{"ts": "2025-09-13T20:53:07+0000", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "310f6d76aa88437e8d11f62f5361b719"}
{"ts": "2025-09-13T20:53:07+0000", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "310f6d76aa88437e8d11f62f5361b719"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Shutting down", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application shutdown.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application shutdown complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Finished server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:08+0000", "level": "INFO", "logger": "aio_pika.queue", "msg": "<RobustQueueIterator: queue='q-customer' ctag='ctag2.3c0c32dea12e4200a740af55bfb3013a'> closing with timeout 5 seconds", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] Consumer lancé (q-customer, patterns=order.#)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-13T22:01:15+0000", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q-customer bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T08:53:53+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Started server process [1]", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T08:53:53+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Waiting for application startup.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T08:53:53+0000", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 674, in __init__\n    self.__connect()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 900, in __connect\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.OperationalError: connection to server at \"customer-db\" (192.168.128.2), port 5432 failed: FATAL:  the database system is starting up\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3278, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 148, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 2442, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 674, in __init__\n    self.__connect()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 900, in __connect\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"customer-db\" (192.168.128.2), port 5432 failed: FATAL:  the database system is starting up\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}
{"ts": "2025-09-14T08:53:54+0000", "level": "ERROR", "logger": "customer-api", "msg": "database init failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 674, in __init__\n    self.__connect()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 900, in __connect\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\npsycopg2.OperationalError: connection to server at \"customer-db\" (192.168.128.2), port 5432 failed: FATAL:  the database system is starting up\n\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/main.py\", line 53, in lifespan\n    init_db()\n  File \"/app/app/core/database.py\", line 39, in init_db\n    Base.metadata.create_all(bind=engine)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/sql/schema.py\", line 5868, in create_all\n    bind._run_ddl_visitor(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3252, in _run_ddl_visitor\n    with self.begin() as conn:\n  File \"/usr/local/lib/python3.11/contextlib.py\", line 137, in __enter__\n    return next(self.gen)\n           ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3242, in begin\n    with self.connect() as conn:\n         ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3278, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 148, in __init__\n    Connection._handle_dbapi_exception_noconnection(\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 2442, in _handle_dbapi_exception_noconnection\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 674, in __init__\n    self.__connect()\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 900, in __connect\n    with util.safe_reraise():\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/util/langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/pool/base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/psycopg2/__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nsqlalchemy.exc.OperationalError: (psycopg2.OperationalError) connection to server at \"customer-db\" (192.168.128.2), port 5432 failed: FATAL:  the database system is starting up\n\n(Background on this error at: https://sqlalche.me/e/20/e3q8)"}
{"ts": "2025-09-14T08:53:54+0000", "level": "INFO", "logger": "aio_pika.robust_connection", "msg": "Connection to amqp://app:******@rabbitmq:5672/%2F closed. Reconnecting after 5 seconds.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T08:53:54+0000", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: [Errno 111] Connection refused", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 457, in connect\n    reader, writer = await asyncio.open_connection(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/asyncio/streams.py\", line 48, in open_connection\n    transport, _ = await loop.create_connection(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"uvloop/loop.pyx\", line 2043, in create_connection\n  File \"uvloop/loop.pyx\", line 2020, in uvloop.loop.Loop.create_connection\nConnectionRefusedError: [Errno 111] Connection refused\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/app/app/main.py\", line 59, in lifespan\n    await rabbitmq.connect()\n  File \"/app/app/infra/events/rabbitmq.py\", line 40, in connect\n    self.connection = await aio_pika.connect_robust(self.url)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 340, in connect_robust\n    await connection.connect(timeout=timeout)\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 186, in connect\n    await self.__fail_fast_future\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/robust_connection.py\", line 141, in __connection_factory\n    await Connection.connect(self, self.__connect_timeout)\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/connection.py\", line 118, in connect\n    self.transport = await UnderlayConnection.connect(\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/abc.py\", line 671, in connect\n    connection = await cls.make_connection(\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aio_pika/abc.py\", line 659, in make_connection\n    connection: aiormq.abc.AbstractConnection = await asyncio.wait_for(\n                                                ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/asyncio/tasks.py\", line 452, in wait_for\n    return await fut\n           ^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 920, in connect\n    await connection.connect(client_properties or {})\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/base.py\", line 164, in wrap\n    return await self.create_task(func(self, *args, **kwargs))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/abc.py\", line 44, in __inner\n    return await self.task\n           ^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/aiormq/connection.py\", line 464, in connect\n    raise AMQPConnectionError(*e.args) from e\naiormq.exceptions.AMQPConnectionError: [Errno 111] Connection refused"}
{"ts": "2025-09-14T08:53:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Application startup complete.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T08:53:54+0000", "level": "INFO", "logger": "uvicorn.error", "msg": "Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "9583961ae94b4621b7b405cf55a589cb"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "c72bb56b44264747be3bf367418431ec"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "0dcec162a8594eb492dbcc049a7d5752"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "98d8c747137845619507d0ec10668859"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:17:14+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "88850fd9180f45dd9f2326162be73ece"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "88850fd9180f45dd9f2326162be73ece"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "88850fd9180f45dd9f2326162be73ece"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ea1644fb1da1420ba6d044d0b328e293"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ea1644fb1da1420ba6d044d0b328e293"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ea1644fb1da1420ba6d044d0b328e293"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "40489da28e6f4c498fa0ac5e4410dc6c", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3b7847e28d3f4da18e7ca93050f6a148"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3b7847e28d3f4da18e7ca93050f6a148"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3b7847e28d3f4da18e7ca93050f6a148"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c58750685a304e73952ee102070a8a1a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c58750685a304e73952ee102070a8a1a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c58750685a304e73952ee102070a8a1a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "cdd1fea09d95448c95d7f84c8bd3653f"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "cdd1fea09d95448c95d7f84c8bd3653f"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "cdd1fea09d95448c95d7f84c8bd3653f"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "6ef8a838eaa14294a982bddfcbd813a9"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "6ef8a838eaa14294a982bddfcbd813a9"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "6ef8a838eaa14294a982bddfcbd813a9"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "72a834cf1c3a4c24b7c86e2b62a22a6a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "72a834cf1c3a4c24b7c86e2b62a22a6a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "72a834cf1c3a4c24b7c86e2b62a22a6a"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "b2040e2de71a4ea6a6bb8360944c6db7"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "729f52e2f3d645c2aeda83f012811f03"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:11+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "fb2ef3b6a1264ac397cfe7f955973a26"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "9b645c63a0984f19ad158918ae37af0d"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:21:12+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "fcd3cc1141f04caa98fb667c9edea50e"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "fcd3cc1141f04caa98fb667c9edea50e"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "fcd3cc1141f04caa98fb667c9edea50e"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a2d71fd28216478397ea6b6de1205ed9"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a2d71fd28216478397ea6b6de1205ed9"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a2d71fd28216478397ea6b6de1205ed9"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "977506f7610c44f58e19cb167048aaf1", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "fa45865447d5433e9ebea7dcdc312783"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "fa45865447d5433e9ebea7dcdc312783"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "fa45865447d5433e9ebea7dcdc312783"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ce8e31dd00f740749190a25a440f7203"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ce8e31dd00f740749190a25a440f7203"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ce8e31dd00f740749190a25a440f7203"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a4a8821b26ca459db726b31ab683f168"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a4a8821b26ca459db726b31ab683f168"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a4a8821b26ca459db726b31ab683f168"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "e162379eaed548b9b60d90fc7d9089a6"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "e162379eaed548b9b60d90fc7d9089a6"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "e162379eaed548b9b60d90fc7d9089a6"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "0237e651b2f04214b0557680fca90aed"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "0237e651b2f04214b0557680fca90aed"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "0237e651b2f04214b0557680fca90aed"}
{"ts": "2025-09-14T11:25:27+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "720b20450a844f1cbcc131bd2d4f7a1b"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "23c9973977bf4e65a4bb2ebd97e66437"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "d8d3644c94c34de3a6ef239925f90c13"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:28+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "3ee67a45fa7a4c1094b6816247fd6548"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "215f9b6cdfe7468f9428a70eb2a7a830"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:25:29+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "7c0f18dfc94e4fdbb8323413945397f9"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "7c0f18dfc94e4fdbb8323413945397f9"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "7c0f18dfc94e4fdbb8323413945397f9"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "67b6a22ba6b445f6894760ddcaf00c09"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "67b6a22ba6b445f6894760ddcaf00c09"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "67b6a22ba6b445f6894760ddcaf00c09"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "1e20ff8d10a54adeafd9f657fd5ae39a", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "1cb2954b7f6e4b31ae214eec75045a0c"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "1cb2954b7f6e4b31ae214eec75045a0c"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1cb2954b7f6e4b31ae214eec75045a0c"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "4d0bcea01756494b84ac629853e968eb"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "4d0bcea01756494b84ac629853e968eb"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "4d0bcea01756494b84ac629853e968eb"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c44b62c860d64849bde4c779b835acfc"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c44b62c860d64849bde4c779b835acfc"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c44b62c860d64849bde4c779b835acfc"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "764c0b05b2d4446c8e3456f276e608a2"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "764c0b05b2d4446c8e3456f276e608a2"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "764c0b05b2d4446c8e3456f276e608a2"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "1e35006956f941598e7eb8d55ebe64b5"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "1e35006956f941598e7eb8d55ebe64b5"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "1e35006956f941598e7eb8d55ebe64b5"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "36dba7c4c2984e65b46dd660ffdd23da"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "dd310525bf8b47249005ff3dab22a8dc"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "6728211c10a74530b59fd97d2e410c0a"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:36+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "d3fa06e4995647f7b32672fefd2452b8"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "dcb0c99c220e45648580089870fb1d7a"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:26:37+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:26:37+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "815017fc5a294812b39365a03455dd54"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "815017fc5a294812b39365a03455dd54"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "815017fc5a294812b39365a03455dd54"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "dadf7a778d474717ba57da25880205f1"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "dadf7a778d474717ba57da25880205f1"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "dadf7a778d474717ba57da25880205f1"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "7f3d2e3062b14c8e9396b992c40e2473", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a14d7bcda41043aaabc63d6bee822db7"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a14d7bcda41043aaabc63d6bee822db7"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a14d7bcda41043aaabc63d6bee822db7"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "fcf7575527a149638e5a376fbed65ffc"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "fcf7575527a149638e5a376fbed65ffc"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "fcf7575527a149638e5a376fbed65ffc"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "d9e7394b4115451c8a7233072de64184"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "d9e7394b4115451c8a7233072de64184"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "d9e7394b4115451c8a7233072de64184"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "81f546db4fd24f6fb44243e2c71f7687"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "81f546db4fd24f6fb44243e2c71f7687"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "81f546db4fd24f6fb44243e2c71f7687"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "7d7d5ed13d2a4d1395b31ee1edd8cdc2"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "7d7d5ed13d2a4d1395b31ee1edd8cdc2"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "7d7d5ed13d2a4d1395b31ee1edd8cdc2"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a25f836e84b14c55b93090ed54ddfe46"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "73311575fd8544bebc11113e1c60d2e1"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "e2c5ed52b8e54365b8f7d7ff46c191e1"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:13+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "87bef812c6c54db18ed2f4fc3ac797fc"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "c9ae677effbb4b56898635c7c1e8175c"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 422 Unprocessable Entity\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:14+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:14+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "cf1f373f1f6a4b94a7d458e368a7581b"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "cf1f373f1f6a4b94a7d458e368a7581b"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "cf1f373f1f6a4b94a7d458e368a7581b"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "7b55e3e9f8f3409da8e90329ebfcc0f2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "7b55e3e9f8f3409da8e90329ebfcc0f2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "7b55e3e9f8f3409da8e90329ebfcc0f2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "3c6646e93dad4b299ee9b16aeb65a5c0", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "d0e00d6c05fc448dba99f01f37b663ac"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "d0e00d6c05fc448dba99f01f37b663ac"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "d0e00d6c05fc448dba99f01f37b663ac"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5f4cf465a2b94c47a279eb932e7bf374"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5f4cf465a2b94c47a279eb932e7bf374"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5f4cf465a2b94c47a279eb932e7bf374"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "b6fdda2b9df343c5b308ec384a41308d"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "b6fdda2b9df343c5b308ec384a41308d"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "b6fdda2b9df343c5b308ec384a41308d"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "cbf6140a75fa47548f8f313a5ce229e1"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "cbf6140a75fa47548f8f313a5ce229e1"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "cbf6140a75fa47548f8f313a5ce229e1"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "d93a403937004f0cbfc0b20525c72ae2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "d93a403937004f0cbfc0b20525c72ae2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "d93a403937004f0cbfc0b20525c72ae2"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "301fd5ab064449e98731fea63702a846"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "7248c740ec9a4273acfe476c9643f4ae"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "eb6d64a55fd74bcda5b960e8a98fda81"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:32+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:33+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "de5b42303842485f971890706383242e"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:34+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c2c4c73f0e484492b17ba91b44bf671e"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c2c4c73f0e484492b17ba91b44bf671e"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c2c4c73f0e484492b17ba91b44bf671e"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "457a0fabdc714d1a859d50045edcecea"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "457a0fabdc714d1a859d50045edcecea"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "457a0fabdc714d1a859d50045edcecea"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "554e30db05664252b4d91b1d268f2978", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a90621b60fa74459be9d3e5c88c2dced"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a90621b60fa74459be9d3e5c88c2dced"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a90621b60fa74459be9d3e5c88c2dced"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "17272e6a54f24c0ab6beab9939b31fc6"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "17272e6a54f24c0ab6beab9939b31fc6"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "17272e6a54f24c0ab6beab9939b31fc6"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "f6afc40b4b4241cf832cd8a17fcc8589"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "f6afc40b4b4241cf832cd8a17fcc8589"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "f6afc40b4b4241cf832cd8a17fcc8589"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "1939115151584fe688268243339916b0"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "1939115151584fe688268243339916b0"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "1939115151584fe688268243339916b0"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "0f08b8910ee84398a7fe5687e0849161"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "0f08b8910ee84398a7fe5687e0849161"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "0f08b8910ee84398a7fe5687e0849161"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "46560784faf848bc95a87f13955d15af"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "0aa705f49f4444a7adc700b2b9f55eaf"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "cb7a205f1b8f4557bd9c6db3891fb994"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:58+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a8bf63a2721646f5ab99701084813a7a"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:30:59+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:30:59+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "8cc2ffe004ae4ab8855cb267cdc25a6c"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "8cc2ffe004ae4ab8855cb267cdc25a6c"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "8cc2ffe004ae4ab8855cb267cdc25a6c"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "de1ec5cf499b4a9a870de1de372d4686"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "de1ec5cf499b4a9a870de1de372d4686"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "de1ec5cf499b4a9a870de1de372d4686"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "36092b3ed9d44014906f69e4530a65d3", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5a5b41be16514f6b86b8d371643e71de"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5a5b41be16514f6b86b8d371643e71de"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5a5b41be16514f6b86b8d371643e71de"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "1b03291431264a518f767c664cb766f8"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "1b03291431264a518f767c664cb766f8"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1b03291431264a518f767c664cb766f8"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a16210e72c7f4533b064a3cb7e8218a5"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a16210e72c7f4533b064a3cb7e8218a5"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a16210e72c7f4533b064a3cb7e8218a5"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "95a500d315404a22b12e6a4c0f8b4dec"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "95a500d315404a22b12e6a4c0f8b4dec"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "95a500d315404a22b12e6a4c0f8b4dec"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "a15ef49965b44631b680bce5661759a3"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "a15ef49965b44631b680bce5661759a3"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "a15ef49965b44631b680bce5661759a3"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9a674ba82ba347ac90ae179aa7cf417b"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "0948db7adc4d43169150b3b93e691b9d"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "bb291ff5422f4875aa96b41c6f5c3208"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:56+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:57+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "64edca89d73c46b896adb57e6f28544d"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:44:58+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:44:58+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "9ce77034ccdd445a87c1f999819afaad"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "9ce77034ccdd445a87c1f999819afaad"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9ce77034ccdd445a87c1f999819afaad"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ed4ded1e5f994dd8b428ca8c73554b75"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ed4ded1e5f994dd8b428ca8c73554b75"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ed4ded1e5f994dd8b428ca8c73554b75"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "f0d073e09eaf4fd282494b7a16bfa5b7", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "6cf976e8306f46579341822b0641e9d8"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "6cf976e8306f46579341822b0641e9d8"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "6cf976e8306f46579341822b0641e9d8"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "df08d51353494ab68c1b6d99a545b514"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "df08d51353494ab68c1b6d99a545b514"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "df08d51353494ab68c1b6d99a545b514"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "789ccae4546a422b9d0bf5504ad3e280"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "789ccae4546a422b9d0bf5504ad3e280"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "789ccae4546a422b9d0bf5504ad3e280"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "cf4d5dd4b5764e36a89e8abdef6cfc46"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "cf4d5dd4b5764e36a89e8abdef6cfc46"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "cf4d5dd4b5764e36a89e8abdef6cfc46"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "ee86be3d8fd648ffa80497a846e317e3"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "ee86be3d8fd648ffa80497a846e317e3"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "ee86be3d8fd648ffa80497a846e317e3"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a5eaef53cbcf4baebd11bf4cc760680e"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "e8fcaf4fd8954f55a9dbd69f03be5b62"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "c659e92d906844a89f8cbd6703798a0b"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:45+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "4b471ba9647045eb951d348115ef88c9"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T11:54:46+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T11:54:46+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:23+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "16e74fd600f04681885eac7e378555ea"}
{"ts": "2025-09-14T12:01:23+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "16e74fd600f04681885eac7e378555ea"}
{"ts": "2025-09-14T12:01:23+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "16e74fd600f04681885eac7e378555ea"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ba53c3ac049d47d78abf5903d362c69b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ba53c3ac049d47d78abf5903d362c69b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ba53c3ac049d47d78abf5903d362c69b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "a2919e2c5f864bc3a9445ed5f8e359eb", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "b4d18d8e07ea46feaa36571610b8749d"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "b4d18d8e07ea46feaa36571610b8749d"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "b4d18d8e07ea46feaa36571610b8749d"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "768e3c2691144eadabeeb01c22c1b9ea"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "768e3c2691144eadabeeb01c22c1b9ea"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "768e3c2691144eadabeeb01c22c1b9ea"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "811190d3ab104725831fbf3ceda70e2b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "811190d3ab104725831fbf3ceda70e2b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "811190d3ab104725831fbf3ceda70e2b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "1171bc3ec11545f49a1ff3510a86bf35"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "1171bc3ec11545f49a1ff3510a86bf35"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "1171bc3ec11545f49a1ff3510a86bf35"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "f67e544e2ab04b348f675116f0e145a7"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "f67e544e2ab04b348f675116f0e145a7"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "f67e544e2ab04b348f675116f0e145a7"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "10ca7610bfce43a29edb305d554ac3b8"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "047ac8685ac640d6bb4eb6aa7e78da85"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "36daad19c0a544dd851e0e90f989fbed"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c831b59a527945ffa4cc70fc602da53b"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:01:24+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:24+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:25+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:01:25+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "1beaa57307d94e3593f52051e46d9623"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "1beaa57307d94e3593f52051e46d9623"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1beaa57307d94e3593f52051e46d9623"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "b319eb5436fe4c048958237268b1c3af"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "b319eb5436fe4c048958237268b1c3af"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "b319eb5436fe4c048958237268b1c3af"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "90e5c1d4f5384113b0d938b80d07871f", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "8e00ca9bbeec4a62b71f110130bb8660"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "8e00ca9bbeec4a62b71f110130bb8660"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "8e00ca9bbeec4a62b71f110130bb8660"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "14c3919c2dc64ff3977a5b3f3572f83b"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "14c3919c2dc64ff3977a5b3f3572f83b"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "14c3919c2dc64ff3977a5b3f3572f83b"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "84d0cab039d340f2ae3d88526aa06809"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "84d0cab039d340f2ae3d88526aa06809"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "84d0cab039d340f2ae3d88526aa06809"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "dd36c52e033241e9b0bd4c8c72773c5d"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "dd36c52e033241e9b0bd4c8c72773c5d"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "dd36c52e033241e9b0bd4c8c72773c5d"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "7f176240a6d94f8db5ff98278b0f9d95"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "7f176240a6d94f8db5ff98278b0f9d95"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "7f176240a6d94f8db5ff98278b0f9d95"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "e2a8006aaf144c27bbfe9e51543ff43c"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "105c0168955143d0b53b9e5ee561ec70"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "e0459be59c9e4aa583d546f07979a447"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "eafb4c69aa2342a7b1f258253207f254"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:15+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=order.created, payload={'customer_id': 1}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:02:16+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:02:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a33f9bdcb9a8444f8d57b7519031604f"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a33f9bdcb9a8444f8d57b7519031604f"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a33f9bdcb9a8444f8d57b7519031604f"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c884df974cfb45f6b920fc359c8d5bd8"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c884df974cfb45f6b920fc359c8d5bd8"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c884df974cfb45f6b920fc359c8d5bd8"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "f6883711f2944f42872fdd7dcf5e826c", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "6d3e0d5374444bd99aa64c047c118fe3"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "6d3e0d5374444bd99aa64c047c118fe3"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "6d3e0d5374444bd99aa64c047c118fe3"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a6e804b17bb946bf92d03e9933558617"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a6e804b17bb946bf92d03e9933558617"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a6e804b17bb946bf92d03e9933558617"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:40+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "d522b7cf6c6143d6a07f1d66d50f48f9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "d522b7cf6c6143d6a07f1d66d50f48f9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "d522b7cf6c6143d6a07f1d66d50f48f9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "2bff50cb25824e9494f4142900664fd9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "2bff50cb25824e9494f4142900664fd9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "2bff50cb25824e9494f4142900664fd9"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "1d18db56e74e43e9a566f345088339c2"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "1d18db56e74e43e9a566f345088339c2"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "1d18db56e74e43e9a566f345088339c2"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "2ae680c5cbfa4724a20d1a3a1d02ef58"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "3012c4f1be6d409596dadf7af3c7b44c"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "4a23ea5a068947e9b2e1cd447dadf43c"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: close error"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=order.created, payload={'customer_id': 1}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern order.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern customer.#", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:33:41+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:33:42+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:42+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:42+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:33:42+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "1691be0f6d8d417590a1840c2e727035"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "1691be0f6d8d417590a1840c2e727035"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1691be0f6d8d417590a1840c2e727035"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "119e7be5f1554f1ebc884f004d446f17"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "119e7be5f1554f1ebc884f004d446f17"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "119e7be5f1554f1ebc884f004d446f17"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "133ea0fc69124ce7a241eb24a33bb1ce", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "d4b291842b544928a6572de50a13c8e5"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "d4b291842b544928a6572de50a13c8e5"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "d4b291842b544928a6572de50a13c8e5"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5dfeddc7baaf4af39e7735c55c8993fa"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5dfeddc7baaf4af39e7735c55c8993fa"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5dfeddc7baaf4af39e7735c55c8993fa"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "b0d49953cd074a0c8b1c28c6838af27c"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "b0d49953cd074a0c8b1c28c6838af27c"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "b0d49953cd074a0c8b1c28c6838af27c"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "66180099877b418d8eea3d0d8e29f1a1"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "66180099877b418d8eea3d0d8e29f1a1"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "66180099877b418d8eea3d0d8e29f1a1"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "6d12a076f37048d18d2ed71a9ed4ce52"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "6d12a076f37048d18d2ed71a9ed4ce52"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "6d12a076f37048d18d2ed71a9ed4ce52"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "fd3b9a88949049699f91c3b3bcd9fd5b"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "721ffda66af144eb956d3737b1be84ae"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "dcb1842d00434337ba6a2623a8dd12af"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:36+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:35:37+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:35:37+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "03e6959557cd4428a8e906bb11be6651"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "03e6959557cd4428a8e906bb11be6651"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "03e6959557cd4428a8e906bb11be6651"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "48ce2256a8e2462fbbaa82fbc8dbae82"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "48ce2256a8e2462fbbaa82fbc8dbae82"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "48ce2256a8e2462fbbaa82fbc8dbae82"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "a9e7aac039144b61bdc9d03e27174a03", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "80494574d5254f598f918377609c48fe"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "80494574d5254f598f918377609c48fe"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "80494574d5254f598f918377609c48fe"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "49f68ed807a24ae78a565fe07489ad31"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "49f68ed807a24ae78a565fe07489ad31"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "49f68ed807a24ae78a565fe07489ad31"}
{"ts": "2025-09-14T12:38:08+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "de0210d303da443196b96c7d0aa6d65b"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "de0210d303da443196b96c7d0aa6d65b"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "de0210d303da443196b96c7d0aa6d65b"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "94fbdc38413f45dcb16fa13b07f8bb86"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "94fbdc38413f45dcb16fa13b07f8bb86"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "94fbdc38413f45dcb16fa13b07f8bb86"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "cb1b5c04a8ad4e94a5b8b97a21d1e61e"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "cb1b5c04a8ad4e94a5b8b97a21d1e61e"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "cb1b5c04a8ad4e94a5b8b97a21d1e61e"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ed7c715532f645a9a838e5e9368e1a0d"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "7ba20df7f98e4eaebbf16792c954e3f4"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "011762d093744ce69fa9c7e987e6b472"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:09+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:38:10+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:38:10+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "0327c06e112b4e18979ac94f29325855"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "0327c06e112b4e18979ac94f29325855"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "0327c06e112b4e18979ac94f29325855"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "4b921628ac284d4abcae9d3d669f9dec"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "4b921628ac284d4abcae9d3d669f9dec"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "4b921628ac284d4abcae9d3d669f9dec"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "97a8454481534a0893e5177bbae75bdf", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5905b1b8422e48d88d520586d1fff0e5"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5905b1b8422e48d88d520586d1fff0e5"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5905b1b8422e48d88d520586d1fff0e5"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5cedd4ff852649c5b30b41cd986dc098"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5cedd4ff852649c5b30b41cd986dc098"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5cedd4ff852649c5b30b41cd986dc098"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3418c8ceee1f47e5884a62cf30e9a61c"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3418c8ceee1f47e5884a62cf30e9a61c"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3418c8ceee1f47e5884a62cf30e9a61c"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "164c76a1258c41aa807073e0bc48d413"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "164c76a1258c41aa807073e0bc48d413"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "164c76a1258c41aa807073e0bc48d413"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "afd8ebaf9db54ace8f100f594510b4d8"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "afd8ebaf9db54ace8f100f594510b4d8"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "afd8ebaf9db54ace8f100f594510b4d8"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "1f26e59b97714c489d0c8bcf9fa94043"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "46a18b023328400c941e61be1af5c0f1"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "04d2058437c045d3b43e3fbd0f1c3b24"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:31+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:40:32+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:40:32+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "bdf596c00f4d41589df282c4094deefe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "bdf596c00f4d41589df282c4094deefe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "bdf596c00f4d41589df282c4094deefe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "7a2eaa11f2e94735877574637dbc6abe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "7a2eaa11f2e94735877574637dbc6abe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "7a2eaa11f2e94735877574637dbc6abe"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "85599d5d0dda4c188208327e3f187c30", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "88cd370665524c30bfe7bce5e584fdd6"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "88cd370665524c30bfe7bce5e584fdd6"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "88cd370665524c30bfe7bce5e584fdd6"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3e3f852e46004e5ba58f69bdc7d8b867"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3e3f852e46004e5ba58f69bdc7d8b867"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3e3f852e46004e5ba58f69bdc7d8b867"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ebf0ff52a4f5412db2aedb616bd70ecc"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ebf0ff52a4f5412db2aedb616bd70ecc"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ebf0ff52a4f5412db2aedb616bd70ecc"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "96e21f02563c4c139b1687ea29a69ed0"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "96e21f02563c4c139b1687ea29a69ed0"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "96e21f02563c4c139b1687ea29a69ed0"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "e58e1934485245b9b854696757190f75"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "e58e1934485245b9b854696757190f75"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "e58e1934485245b9b854696757190f75"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "4f3e6cb969db4a879792d040379bece6"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "9e6fbe71f6834e19a538fd87a8807bf5"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "b3dc5a3dbb7b44208155931755773964"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:50+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:41:51+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:41:51+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "980e80257d064f4e8be107dd1878893a"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "980e80257d064f4e8be107dd1878893a"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "980e80257d064f4e8be107dd1878893a"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a5b7d9a791df4d628d09d59da26af152"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a5b7d9a791df4d628d09d59da26af152"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a5b7d9a791df4d628d09d59da26af152"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "37840c4f5b074789893bca986cd39483", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a0ff1e43096c452e9ed53eb9b17216e7"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a0ff1e43096c452e9ed53eb9b17216e7"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a0ff1e43096c452e9ed53eb9b17216e7"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "ec75fd7c24ce42609c8337e896b1c188"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "ec75fd7c24ce42609c8337e896b1c188"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ec75fd7c24ce42609c8337e896b1c188"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "a4ad3ee824d44268941df3aef8dc9592"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "a4ad3ee824d44268941df3aef8dc9592"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "a4ad3ee824d44268941df3aef8dc9592"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "33608a392e9e4627ae262179e112e90c"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "33608a392e9e4627ae262179e112e90c"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "33608a392e9e4627ae262179e112e90c"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "494740559b014ae18f45a4df6ae05ab3"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "494740559b014ae18f45a4df6ae05ab3"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "494740559b014ae18f45a4df6ae05ab3"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "72608a480b084bb4a028bbcd4771b767"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "961e2be55c47453a9111539e14c3a2a4"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "2df49ae81d204d0ab91d28f93f9753ea"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:19+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:42:20+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:42:20+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "724b0c64ac2a4367a0566bf8676308ac"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "724b0c64ac2a4367a0566bf8676308ac"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "724b0c64ac2a4367a0566bf8676308ac"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "18b1a86482da474d96a4e85bc6bdb6cd"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "18b1a86482da474d96a4e85bc6bdb6cd"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "18b1a86482da474d96a4e85bc6bdb6cd"}
{"ts": "2025-09-14T12:44:33+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:33+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "f84d7c850b174f8ab601b50562546e94", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "317fe0ecf38e417db3763932d3dbfb64"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "317fe0ecf38e417db3763932d3dbfb64"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "317fe0ecf38e417db3763932d3dbfb64"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "f6d300b7f2d74f399defc3d4762e9fb8"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "f6d300b7f2d74f399defc3d4762e9fb8"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "f6d300b7f2d74f399defc3d4762e9fb8"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "9d0571db4a624bb19694b68058910510"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "9d0571db4a624bb19694b68058910510"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9d0571db4a624bb19694b68058910510"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "8f7eaab2a9d24ed79781374ca5a5cdb4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "8f7eaab2a9d24ed79781374ca5a5cdb4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "8f7eaab2a9d24ed79781374ca5a5cdb4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "a263064c053946d287564095eb24b1e4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "a263064c053946d287564095eb24b1e4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "a263064c053946d287564095eb24b1e4"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "226992b49d9b4e35944810cde57678b1"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "d625d44fd4ef4a99a9ac1b0af5d324de"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "0d9497e35ca94d55b83c9e4b8a17a857"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:44:34+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:34+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:35+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:35+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:35+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:44:35+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "4958bebafa044079b0529015a8c93ad1"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "4958bebafa044079b0529015a8c93ad1"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "4958bebafa044079b0529015a8c93ad1"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "07cd3bf5cd854910847bf91d3e338d7b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "07cd3bf5cd854910847bf91d3e338d7b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "07cd3bf5cd854910847bf91d3e338d7b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "9a9da392c819488381da1ad3defaa5c9", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "58b417b9f1b94672b5ecb00b8afa8d99"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "58b417b9f1b94672b5ecb00b8afa8d99"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "58b417b9f1b94672b5ecb00b8afa8d99"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "f4626bc3b5d84dd5b310df839713447f"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "f4626bc3b5d84dd5b310df839713447f"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "f4626bc3b5d84dd5b310df839713447f"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "63850c3668294963a37f5fc4e58fe4d3"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "63850c3668294963a37f5fc4e58fe4d3"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "63850c3668294963a37f5fc4e58fe4d3"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "4995fed1c2c74de38aecb53aa1cdf6ae"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "4995fed1c2c74de38aecb53aa1cdf6ae"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "4995fed1c2c74de38aecb53aa1cdf6ae"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "0ab6c9a73357485b9b8fdb3f11afcb1b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "0ab6c9a73357485b9b8fdb3f11afcb1b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "0ab6c9a73357485b9b8fdb3f11afcb1b"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "572e9aca0e9d4d8d8a2722d282ce22c6"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "9c52111a379b4ccd97884c0250703577"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "d92b5a99e2044d03a7c57036bf2114c2"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:47:43+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db rollback failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 57, in get_db\n    db.rollback()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: rollback fail"}
{"ts": "2025-09-14T12:47:43+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session close failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 64, in get_db\n    db.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: close fail"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:43+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:47:44+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:47:44+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3fb9d340a08642f8a48b15de20854c5f"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3fb9d340a08642f8a48b15de20854c5f"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3fb9d340a08642f8a48b15de20854c5f"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "14f788e8d9d04bdd82c6e7ecab896358"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "14f788e8d9d04bdd82c6e7ecab896358"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "14f788e8d9d04bdd82c6e7ecab896358"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "504fcb5d8ed3401a9a7071f12d7f1a92", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "2c4dce9e5c12478c98e90e01e0fd9699"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "2c4dce9e5c12478c98e90e01e0fd9699"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "2c4dce9e5c12478c98e90e01e0fd9699"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "912d7c8a22514bf6a064b7a74597cf20"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "912d7c8a22514bf6a064b7a74597cf20"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "912d7c8a22514bf6a064b7a74597cf20"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "48c1a6ee3f9f4af89f859630446b4133"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "48c1a6ee3f9f4af89f859630446b4133"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "48c1a6ee3f9f4af89f859630446b4133"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "a88edcc2b2794f22af08fc8209949fde"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "a88edcc2b2794f22af08fc8209949fde"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "a88edcc2b2794f22af08fc8209949fde"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "343a0b167e30419cbc2812a55efce7e9"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "343a0b167e30419cbc2812a55efce7e9"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "343a0b167e30419cbc2812a55efce7e9"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "ed59148993114aa0a716adea71da2b32"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "1df58c5fe33447369948cc393febfa39"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "41ce828ed7f84dd3b077d6876e669321"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:49:16+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db rollback failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 57, in get_db\n    db.rollback()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: rollback fail"}
{"ts": "2025-09-14T12:49:16+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session close failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 64, in get_db\n    db.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: close fail"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:16+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:17+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <lambda>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\n                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <genexpr>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\nException: db fail"}
{"ts": "2025-09-14T12:49:17+0200", "level": "ERROR", "logger": "customer-api", "msg": "database init failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 53, in lifespan\n    init_db()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <lambda>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <genexpr>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\nException: init fail"}
{"ts": "2025-09-14T12:49:17+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: rabbit fail", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 86, in bad_connect\n    async def bad_connect(): raise Exception(\"rabbit fail\")\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nException: rabbit fail"}
{"ts": "2025-09-14T12:49:19+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3278, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 674, in __init__\n    self.__connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 900, in __connect\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\psycopg2\\__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf4 in position 57: invalid continuation byte"}
{"ts": "2025-09-14T12:49:19+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: object NoneType can't be used in 'await' expression", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\nTypeError: object NoneType can't be used in 'await' expression"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers \"HTTP/1.1 307 Temporary Redirect\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/123 \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: OPTIONS http://testserver/customers \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:19+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:49:19+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:49:20+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:49:20+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c315ae6e53024bc8bf08bad0d8fea62d"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c315ae6e53024bc8bf08bad0d8fea62d"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c315ae6e53024bc8bf08bad0d8fea62d"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "cdc56264f2b7452ca29d32dbdae9f848"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "cdc56264f2b7452ca29d32dbdae9f848"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "cdc56264f2b7452ca29d32dbdae9f848"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "ff91681b316f4bd6af6c6a77a122ff8a", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "10bfdd3666a54510beb142d7549cb011"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "10bfdd3666a54510beb142d7549cb011"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "10bfdd3666a54510beb142d7549cb011"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "36bd163e4d8e4beb97d3cd2c5e8d7888"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "36bd163e4d8e4beb97d3cd2c5e8d7888"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "36bd163e4d8e4beb97d3cd2c5e8d7888"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "3b9a837d77d9416688439d846724c656"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "3b9a837d77d9416688439d846724c656"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "3b9a837d77d9416688439d846724c656"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "137459ee2ce74aaaa79dd16dd93eb26f"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "137459ee2ce74aaaa79dd16dd93eb26f"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "137459ee2ce74aaaa79dd16dd93eb26f"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "7f55f626123d47dc84853db556088836"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "7f55f626123d47dc84853db556088836"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "7f55f626123d47dc84853db556088836"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "9ae8396c830246269d75d225c046ed42"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "34e77f32cdeb40f8840fe4509b7205b4"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "fb8583ee8a4444f5a7cc2121d77ed596"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:12+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db rollback failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 57, in get_db\n    db.rollback()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: rollback fail"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session close failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 64, in get_db\n    db.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: close fail"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.cancelled sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 55 non trouvé pour order.cancelled", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <lambda>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\n                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <genexpr>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\nException: db fail"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "customer-api", "msg": "database init failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 53, in lifespan\n    init_db()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <lambda>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <genexpr>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\nException: init fail"}
{"ts": "2025-09-14T12:51:13+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: rabbit fail", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 86, in bad_connect\n    async def bad_connect(): raise Exception(\"rabbit fail\")\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nException: rabbit fail"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3278, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 674, in __init__\n    self.__connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 900, in __connect\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\psycopg2\\__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf4 in position 57: invalid continuation byte"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: object NoneType can't be used in 'await' expression", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\nTypeError: object NoneType can't be used in 'await' expression"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers \"HTTP/1.1 307 Temporary Redirect\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/123 \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: OPTIONS http://testserver/customers \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:51:16+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:51:16+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "80ba889883bd476b8d1be2b1068b1ece"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "80ba889883bd476b8d1be2b1068b1ece"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "80ba889883bd476b8d1be2b1068b1ece"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "5b68f9537b1f4e5c9d936ea44d95a2c4"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "5b68f9537b1f4e5c9d936ea44d95a2c4"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "5b68f9537b1f4e5c9d936ea44d95a2c4"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "b1e4ed34b471496592980ae97238836e", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Jane', 'Doe', 'jane.doe@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "c7f73c430e644d5e8c8e1d4e47e44b0e"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "c7f73c430e644d5e8c8e1d4e47e44b0e"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "c7f73c430e644d5e8c8e1d4e47e44b0e"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "67df73c532864cb4a1efe6093719f4ac"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "67df73c532864cb4a1efe6093719f4ac"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "67df73c532864cb4a1efe6093719f4ac"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/?company=A%20Corp \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "8dac71ffaec9440288b19eadece2e942"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "8dac71ffaec9440288b19eadece2e942"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "8dac71ffaec9440288b19eadece2e942"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "48c17687840a45268773c571984afabb"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "48c17687840a45268773c571984afabb"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "48c17687840a45268773c571984afabb"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "15898c999c72433b809b614a7f5a8254"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "15898c999c72433b809b614a7f5a8254"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "15898c999c72433b809b614a7f5a8254"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer created", "service": "customer-api", "request_id": "02f8caed77904973bcadde06dd1ffcbb"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 201 Created\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer updated", "service": "customer-api", "request_id": "c46e04b5517643ff8be9b7e7d9886a8b"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.api.routes", "msg": "customer deleted", "service": "customer-api", "request_id": "c6e5a6ba2e7449b187a8ec760776c8bc"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/1 \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/client@test.com \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/99 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 400 Bad Request\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: PUT http://testserver/customers/1 \"HTTP/1.1 409 Conflict\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: DELETE http://testserver/customers/123 \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/email/missing@test.com \"HTTP/1.1 404 Not Found\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: POST http://testserver/customers/ \"HTTP/1.1 403 Forbidden\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.core.database", "msg": "DB init: tables ensured", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session rolled back due to exception", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: fail"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db rollback failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 57, in get_db\n    db.rollback()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: rollback fail"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "app.core.database", "msg": "db session close failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 54, in get_db\n    yield db\nValueError: boom\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\core\\database.py\", line 64, in get_db\n    db.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1139, in __call__\n    return self._mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1143, in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 1198, in _execute_mock_call\n    raise effect\nException: close fail"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.created reçu pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.created sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 99 non trouvé pour order.created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.deleted sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 42 non trouvé pour order.deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count++ et last_order_date MAJ pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.confirmed sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 123 non trouvé pour order.confirmed", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] order.rejected reçu pour client 99", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.rejected sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "app.infra.events.handlers", "msg": "[customer-api] Orders_count-- pour client 1", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "order.cancelled sans customer_id", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "WARNING", "logger": "app.infra.events.handlers", "msg": "[customer-api] client 55 non trouvé pour order.cancelled", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "customer-api", "msg": "database connection OK", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "customer-api", "msg": "[customer-api] RabbitMQ connecté, exchange=events", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: a coroutine was expected, got None", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 82, in lifespan\n    asyncio.create_task(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\tasks.py\", line 420, in create_task\n    task = loop.create_task(coro)\n           ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\asyncio\\base_events.py\", line 458, in create_task\n    task = tasks.Task(coro, loop=self, name=name, context=context)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nTypeError: a coroutine was expected, got None"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/health \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "INFO", "logger": "customer-api", "msg": "RabbitMQ disconnected", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <lambda>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\n                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 83, in <genexpr>\n    monkeypatch.setattr(app.main, \"engine\", type(\"E\", (), {\"connect\": lambda s: (_ for _ in ()).throw(Exception(\"db fail\"))})())\nException: db fail"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "customer-api", "msg": "database init failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 53, in lifespan\n    init_db()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <lambda>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 84, in <genexpr>\n    monkeypatch.setattr(app.main, \"init_db\", lambda: (_ for _ in ()).throw(Exception(\"init fail\")))\nException: init fail"}
{"ts": "2025-09-14T12:52:26+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: rabbit fail", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_main.py\", line 86, in bad_connect\n    async def bad_connect(): raise Exception(\"rabbit fail\")\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nException: rabbit fail"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "customer-api", "msg": "database connectivity check failed", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 46, in lifespan\n    with engine.connect() as conn:\n         ^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3278, in connect\n    return self._connection_cls(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 146, in __init__\n    self._dbapi_connection = engine.raw_connection()\n                             ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 3302, in raw_connection\n    return self.pool.connect()\n           ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 449, in connect\n    return _ConnectionFairy._checkout(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 1263, in _checkout\n    fairy = _ConnectionRecord.checkout(pool)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 712, in checkout\n    rec = pool._do_get()\n          ^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 179, in _do_get\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\impl.py\", line 177, in _do_get\n    return self._create_connection()\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 390, in _create_connection\n    return _ConnectionRecord(self)\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 674, in __init__\n    self.__connect()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 900, in __connect\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\pool\\base.py\", line 896, in __connect\n    self.dbapi_connection = connection = pool._invoke_creator(self)\n                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\create.py\", line 643, in connect\n    return dialect.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 621, in connect\n    return self.loaded_dbapi.connect(*cargs, **cparams)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\psycopg2\\__init__.py\", line 122, in connect\n    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xf4 in position 57: invalid continuation byte"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "customer-api", "msg": "[customer-api] Échec initialisation RabbitMQ: object NoneType can't be used in 'await' expression", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\main.py\", line 59, in lifespan\n    await rabbitmq.connect()\nTypeError: object NoneType can't be used in 'await' expression"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers \"HTTP/1.1 307 Temporary Redirect\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/ \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/customers/123 \"HTTP/1.1 401 Unauthorized\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: GET http://testserver/metrics \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "httpx", "msg": "HTTP Request: OPTIONS http://testserver/customers \"HTTP/1.1 200 OK\"", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connected. Exchange 'events' (topic) declared.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ channel closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "RabbitMQ connection closed.", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ channel.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 54, in disconnect\n    await self.channel.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: channel error"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to close RabbitMQ connection.", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 61, in disconnect\n    await self.connection.close()\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: conn error"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=rk, payload={'hello': 'world'}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Cannot publish: exchange is not available (connect() not called).", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Failed to publish rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 74, in publish_message\n    await self.exchange.publish(\n  File \"C:\\Users\\angi\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\unittest\\mock.py\", line 2282, in _execute_mock_call\n    raise effect\nException: boom"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Published rk=ignored_key, payload={'test': True}", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound (fanout)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "INFO", "logger": "app.infra.events.rabbitmq", "msg": "Queue q bound to pattern rk", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:29+0200", "level": "ERROR", "logger": "app.infra.events.rabbitmq", "msg": "Handler error rk=rk", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\infra\\events\\rabbitmq.py\", line 125, in start_consumer\n    await handler(payload, rk)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_rabbitmq.py\", line 303, in handler\n    raise RuntimeError(\"boom\")\nRuntimeError: boom"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client deleted", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlite3.IntegrityError: UNIQUE constraint failed: clients.email\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 2028, in commit\n    trans.commit(_to_root=True)\n  File \"<string>\", line 2, in commit\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1313, in commit\n    self._prepare_impl()\n  File \"<string>\", line 2, in _prepare_impl\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\state_changes.py\", line 139, in _go\n    ret_value = fn(self, *arg, **kw)\n                ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 1288, in _prepare_impl\n    self.session.flush()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4352, in flush\n    self._flush(objects)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4487, in _flush\n    with util.safe_reraise():\n         ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 146, in __exit__\n    raise exc_value.with_traceback(exc_tb)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\session.py\", line 4448, in _flush\n    flush_context.execute()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 466, in execute\n    rec.execute(self)\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\unitofwork.py\", line 642, in execute\n    util.preloaded.orm_persistence.save_obj(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 93, in save_obj\n    _emit_insert_statements(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\orm\\persistence.py\", line 1233, in _emit_insert_statements\n    result = connection.execute(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1418, in execute\n    return meth(\n           ^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\sql\\elements.py\", line 515, in _execute_on_connection\n    return connection._execute_clauseelement(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1640, in _execute_clauseelement\n    ret = self._execute_context(\n          ^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1846, in _execute_context\n    return self._exec_single_context(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1986, in _exec_single_context\n    self._handle_dbapi_exception(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 2355, in _handle_dbapi_exception\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\base.py\", line 1967, in _exec_single_context\n    self.dialect.do_execute(\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\product-api\\.venv\\Lib\\site-packages\\sqlalchemy\\engine\\default.py\", line 941, in do_execute\n    cursor.execute(statement, parameters)\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: clients.email\n[SQL: INSERT INTO clients (first_name, last_name, email, company, phone, address_line1, address_line2, postal_code, city, state, country_code, last_order_date, version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETURNING id, created_at, updated_at, orders_count]\n[parameters: ('Dup', 'Name', 'dup@test.com', None, None, None, None, None, None, None, None, None, 1)]\n(Background on this error at: https://sqlalche.me/e/20/gkpj)"}
{"ts": "2025-09-14T12:52:30+0200", "level": "ERROR", "logger": "app.repositories.client", "msg": "error creating client", "service": "customer-api", "request_id": "-", "exc_info": "Traceback (most recent call last):\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\app\\repositories\\client.py\", line 23, in create_client\n    db.commit()\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <lambda>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\n                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\EPSI\\MSPR 4\\PayeTonKawa\\customer-api\\tests\\unit\\test_repositories.py\", line 66, in <genexpr>\n    monkeypatch.setattr(session, \"commit\", lambda: (_ for _ in ()).throw(SQLAlchemyError(\"boom\")))\nsqlalchemy.exc.SQLAlchemyError: boom"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.repositories.client", "msg": "client created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "WARNING", "logger": "app.security.security", "msg": "JWT invalide (signature/iss/exp)", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer created", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer updated", "service": "customer-api", "request_id": "-"}
{"ts": "2025-09-14T12:52:30+0200", "level": "INFO", "logger": "app.services.client_service", "msg": "customer deleted", "service": "customer-api", "request_id": "-"}
